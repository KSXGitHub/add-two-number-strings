// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot: components/ClockForm.jsx 1`] = `
<mocked-component
  _reactInternalInstance={
    ReactCompositeComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <MockedComponent
        zDepth={1}
    >
        <MockedComponent>
            <MockedComponent
                actAsExpander={true}
                showExpandableButton={true}
                subtitle="Click to customize clock"
                title="Clock"
            />
            <MockedComponent
                expandable={true}
            >
                <MockedComponent
                    onChange={[Function]}
                    value="javascript-expression"
                >
                    <MockedComponent
                        label="JavaScript Expression"
                        value="javascript-expression"
                    >
                        <MonacoEditor
                            defaultValue=""
                            editorDidMount={[Function]}
                            editorWillMount={[Function]}
                            height="200"
                            language="javascript"
                            onChange={[Function]}
                            options={Object {}}
                            requireConfig={Object {}}
                            theme="vs-light"
                            value="date => {
                          return moment(date).format('LLLL')
                        }"
                            width="100%"
                        />
                    </MockedComponent>
                    <MockedComponent
                        label="Moment.js"
                        value="momentjs"
                    >
                        <MockedComponent
                            hintText="Moment.js Date/Time Format"
                            onChange={[Function]}
                            value="dddd — YYYY MMMM D — h:mm:ss a"
                        />
                    </MockedComponent>
                    <MockedComponent
                        label="Native toString function"
                        value="native-to-string"
                    >
                        <div>
                            <MockedComponent
                                floatingLabelText="Function"
                                onChange={[Function]}
                                value="toLocaleTimeString"
                            >
                                <MockedComponent
                                    primaryText=".toString()"
                                    value="toString"
                                />
                                <MockedComponent
                                    primaryText=".toDateString()"
                                    value="toDateString"
                                />
                                <MockedComponent
                                    primaryText=".toTimeString()"
                                    value="toTimeString"
                                />
                                <MockedComponent
                                    primaryText=".toLocaleString()"
                                    value="toLocaleString"
                                />
                                <MockedComponent
                                    primaryText=".toLocaleDateString()"
                                    value="toLocaleDateString"
                                />
                                <MockedComponent
                                    primaryText=".toLocaleTimeString()"
                                    value="toLocaleTimeString"
                                />
                            </MockedComponent>
                        </div>
                        <MonacoEditor
                            defaultValue=""
                            editorDidMount={[Function]}
                            editorWillMount={[Function]}
                            height="150"
                            language="json"
                            onChange={[Function]}
                            options={Object {}}
                            requireConfig={Object {}}
                            theme="vs-light"
                            value="{
                          \\"locale\\": \\"en-US\\",
                          \\"options\\": {
                            \\"hour12\\": false
                          }
                        }"
                            width="100%"
                        />
                    </MockedComponent>
                    <MockedComponent
                        label="UNIX Timestamp"
                        value="timestamp"
                    />
                </MockedComponent>
            </MockedComponent>
            <MockedComponent>
                <Clock
                    display={[Function]}
                    formattingExpression="date => {
                  return moment(date).format('LLLL')
                }"
                    formattingMethod="javascript-expression"
                    momentTemplateString="dddd — YYYY MMMM D — h:mm:ss a"
                    toStringMethodArguments="{
                  \\"locale\\": \\"en-US\\",
                  \\"options\\": {
                    \\"hour12\\": false
                  }
                }"
                    toStringMethodName="toLocaleTimeString"
                />
            </MockedComponent>
        </MockedComponent>
    </MockedComponent>,
      "_hostContainerInfo": Object {
        "createNodeMock": [Function],
      },
      "_hostParent": null,
      "_instance": MockedComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "children": <MockedComponent>
            <MockedComponent
                    actAsExpander={true}
                    showExpandableButton={true}
                    subtitle="Click to customize clock"
                    title="Clock"
            />
            <MockedComponent
                    expandable={true}
            >
                    <MockedComponent
                            onChange={[Function]}
                            value="javascript-expression"
                    >
                            <MockedComponent
                                    label="JavaScript Expression"
                                    value="javascript-expression"
                            >
                                    <MonacoEditor
                                            defaultValue=""
                                            editorDidMount={[Function]}
                                            editorWillMount={[Function]}
                                            height="200"
                                            language="javascript"
                                            onChange={[Function]}
                                            options={Object {}}
                                            requireConfig={Object {}}
                                            theme="vs-light"
                                            value="date => {
                                      return moment(date).format('LLLL')
                                    }"
                                            width="100%"
                                    />
                            </MockedComponent>
                            <MockedComponent
                                    label="Moment.js"
                                    value="momentjs"
                            >
                                    <MockedComponent
                                            hintText="Moment.js Date/Time Format"
                                            onChange={[Function]}
                                            value="dddd — YYYY MMMM D — h:mm:ss a"
                                    />
                            </MockedComponent>
                            <MockedComponent
                                    label="Native toString function"
                                    value="native-to-string"
                            >
                                    <div>
                                            <MockedComponent
                                                    floatingLabelText="Function"
                                                    onChange={[Function]}
                                                    value="toLocaleTimeString"
                                            >
                                                    <MockedComponent
                                                            primaryText=".toString()"
                                                            value="toString"
                                                    />
                                                    <MockedComponent
                                                            primaryText=".toDateString()"
                                                            value="toDateString"
                                                    />
                                                    <MockedComponent
                                                            primaryText=".toTimeString()"
                                                            value="toTimeString"
                                                    />
                                                    <MockedComponent
                                                            primaryText=".toLocaleString()"
                                                            value="toLocaleString"
                                                    />
                                                    <MockedComponent
                                                            primaryText=".toLocaleDateString()"
                                                            value="toLocaleDateString"
                                                    />
                                                    <MockedComponent
                                                            primaryText=".toLocaleTimeString()"
                                                            value="toLocaleTimeString"
                                                    />
                                            </MockedComponent>
                                    </div>
                                    <MonacoEditor
                                            defaultValue=""
                                            editorDidMount={[Function]}
                                            editorWillMount={[Function]}
                                            height="150"
                                            language="json"
                                            onChange={[Function]}
                                            options={Object {}}
                                            requireConfig={Object {}}
                                            theme="vs-light"
                                            value="{
                                      \\"locale\\": \\"en-US\\",
                                      \\"options\\": {
                                        \\"hour12\\": false
                                      }
                                    }"
                                            width="100%"
                                    />
                            </MockedComponent>
                            <MockedComponent
                                    label="UNIX Timestamp"
                                    value="timestamp"
                            />
                    </MockedComponent>
            </MockedComponent>
            <MockedComponent>
                    <Clock
                            display={[Function]}
                            formattingExpression="date => {
                      return moment(date).format('LLLL')
                    }"
                            formattingMethod="javascript-expression"
                            momentTemplateString="dddd — YYYY MMMM D — h:mm:ss a"
                            toStringMethodArguments="{
                      \\"locale\\": \\"en-US\\",
                      \\"options\\": {
                        \\"hour12\\": false
                      }
                    }"
                            toStringMethodName="toLocaleTimeString"
                    />
            </MockedComponent>
    </MockedComponent>,
          "zDepth": 1,
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountImage": null,
      "_mountIndex": 0,
      "_mountOrder": 3,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": <mocked-component
        _reactInternalInstance={[Circular]}
        context={Object {}}
        props={
            Object {
                "children": <MockedComponent>
                  <MockedComponent
                        actAsExpander={true}
                        showExpandableButton={true}
                        subtitle="Click to customize clock"
                        title="Clock"
                  />
                  <MockedComponent
                        expandable={true}
                  >
                        <MockedComponent
                              onChange={[Function]}
                              value="javascript-expression"
                        >
                              <MockedComponent
                                    label="JavaScript Expression"
                                    value="javascript-expression"
                              >
                                    <MonacoEditor
                                          defaultValue=""
                                          editorDidMount={[Function]}
                                          editorWillMount={[Function]}
                                          height="200"
                                          language="javascript"
                                          onChange={[Function]}
                                          options={Object {}}
                                          requireConfig={Object {}}
                                          theme="vs-light"
                                          value="date => {
                                      return moment(date).format('LLLL')
                                    }"
                                          width="100%"
                                    />
                              </MockedComponent>
                              <MockedComponent
                                    label="Moment.js"
                                    value="momentjs"
                              >
                                    <MockedComponent
                                          hintText="Moment.js Date/Time Format"
                                          onChange={[Function]}
                                          value="dddd — YYYY MMMM D — h:mm:ss a"
                                    />
                              </MockedComponent>
                              <MockedComponent
                                    label="Native toString function"
                                    value="native-to-string"
                              >
                                    <div>
                                          <MockedComponent
                                                floatingLabelText="Function"
                                                onChange={[Function]}
                                                value="toLocaleTimeString"
                                          >
                                                <MockedComponent
                                                      primaryText=".toString()"
                                                      value="toString"
                                                />
                                                <MockedComponent
                                                      primaryText=".toDateString()"
                                                      value="toDateString"
                                                />
                                                <MockedComponent
                                                      primaryText=".toTimeString()"
                                                      value="toTimeString"
                                                />
                                                <MockedComponent
                                                      primaryText=".toLocaleString()"
                                                      value="toLocaleString"
                                                />
                                                <MockedComponent
                                                      primaryText=".toLocaleDateString()"
                                                      value="toLocaleDateString"
                                                />
                                                <MockedComponent
                                                      primaryText=".toLocaleTimeString()"
                                                      value="toLocaleTimeString"
                                                />
                                          </MockedComponent>
                                    </div>
                                    <MonacoEditor
                                          defaultValue=""
                                          editorDidMount={[Function]}
                                          editorWillMount={[Function]}
                                          height="150"
                                          language="json"
                                          onChange={[Function]}
                                          options={Object {}}
                                          requireConfig={Object {}}
                                          theme="vs-light"
                                          value="{
                                      \\"locale\\": \\"en-US\\",
                                      \\"options\\": {
                                        \\"hour12\\": false
                                      }
                                    }"
                                          width="100%"
                                    />
                              </MockedComponent>
                              <MockedComponent
                                    label="UNIX Timestamp"
                                    value="timestamp"
                              />
                        </MockedComponent>
                  </MockedComponent>
                  <MockedComponent>
                        <Clock
                              display={[Function]}
                              formattingExpression="date => {
                          return moment(date).format('LLLL')
                        }"
                              formattingMethod="javascript-expression"
                              momentTemplateString="dddd — YYYY MMMM D — h:mm:ss a"
                              toStringMethodArguments="{
                          \\"locale\\": \\"en-US\\",
                          \\"options\\": {
                            \\"hour12\\": false
                          }
                        }"
                              toStringMethodName="toLocaleTimeString"
                        />
                  </MockedComponent>
            </MockedComponent>,
                "zDepth": 1,
              }
        }
        refs={Object {}}
        state={null}
        updater={
            Object {
                "enqueueCallback": [Function],
                "enqueueCallbackInternal": [Function],
                "enqueueElementInternal": [Function],
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
                "validateCallback": [Function],
              }
        }
    />,
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
    }
  }
  context={Object {}}
  props={
    Object {
      "children": <MockedComponent>
        <MockedComponent
            actAsExpander={true}
            showExpandableButton={true}
            subtitle="Click to customize clock"
            title="Clock"
        />
        <MockedComponent
            expandable={true}
        >
            <MockedComponent
                onChange={[Function]}
                value="javascript-expression"
            >
                <MockedComponent
                    label="JavaScript Expression"
                    value="javascript-expression"
                >
                    <MonacoEditor
                        defaultValue=""
                        editorDidMount={[Function]}
                        editorWillMount={[Function]}
                        height="200"
                        language="javascript"
                        onChange={[Function]}
                        options={Object {}}
                        requireConfig={Object {}}
                        theme="vs-light"
                        value="date => {
                      return moment(date).format('LLLL')
                    }"
                        width="100%"
                    />
                </MockedComponent>
                <MockedComponent
                    label="Moment.js"
                    value="momentjs"
                >
                    <MockedComponent
                        hintText="Moment.js Date/Time Format"
                        onChange={[Function]}
                        value="dddd — YYYY MMMM D — h:mm:ss a"
                    />
                </MockedComponent>
                <MockedComponent
                    label="Native toString function"
                    value="native-to-string"
                >
                    <div>
                        <MockedComponent
                            floatingLabelText="Function"
                            onChange={[Function]}
                            value="toLocaleTimeString"
                        >
                            <MockedComponent
                                primaryText=".toString()"
                                value="toString"
                            />
                            <MockedComponent
                                primaryText=".toDateString()"
                                value="toDateString"
                            />
                            <MockedComponent
                                primaryText=".toTimeString()"
                                value="toTimeString"
                            />
                            <MockedComponent
                                primaryText=".toLocaleString()"
                                value="toLocaleString"
                            />
                            <MockedComponent
                                primaryText=".toLocaleDateString()"
                                value="toLocaleDateString"
                            />
                            <MockedComponent
                                primaryText=".toLocaleTimeString()"
                                value="toLocaleTimeString"
                            />
                        </MockedComponent>
                    </div>
                    <MonacoEditor
                        defaultValue=""
                        editorDidMount={[Function]}
                        editorWillMount={[Function]}
                        height="150"
                        language="json"
                        onChange={[Function]}
                        options={Object {}}
                        requireConfig={Object {}}
                        theme="vs-light"
                        value="{
                      \\"locale\\": \\"en-US\\",
                      \\"options\\": {
                        \\"hour12\\": false
                      }
                    }"
                        width="100%"
                    />
                </MockedComponent>
                <MockedComponent
                    label="UNIX Timestamp"
                    value="timestamp"
                />
            </MockedComponent>
        </MockedComponent>
        <MockedComponent>
            <Clock
                display={[Function]}
                formattingExpression="date => {
              return moment(date).format('LLLL')
            }"
                formattingMethod="javascript-expression"
                momentTemplateString="dddd — YYYY MMMM D — h:mm:ss a"
                toStringMethodArguments="{
              \\"locale\\": \\"en-US\\",
              \\"options\\": {
                \\"hour12\\": false
              }
            }"
                toStringMethodName="toLocaleTimeString"
            />
        </MockedComponent>
    </MockedComponent>,
      "zDepth": 1,
    }
  }
  refs={Object {}}
  state={null}
  updater={
    Object {
      "enqueueCallback": [Function],
      "enqueueCallbackInternal": [Function],
      "enqueueElementInternal": [Function],
      "enqueueForceUpdate": [Function],
      "enqueueReplaceState": [Function],
      "enqueueSetState": [Function],
      "isMounted": [Function],
      "validateCallback": [Function],
    }
  }
/>
`;
